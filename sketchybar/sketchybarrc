#!/bin/bash

# This is a demo config to showcase some of the most important commands.
# It is meant to be changed and configured, as it is intentionally kept sparse.
# For a (much) more advanced configuration example see my dotfiles:
# https://github.com/FelixKratz/dotfiles

source "$CONFIG_DIR/colors.sh"

ITEM_DIR="$CONFIG_DIR/items"
PLUGIN_DIR="$CONFIG_DIR/plugins"

FONT="HackGen Console NF"

AEROSPACE_PATH="/run/current-system/sw/bin/aerospace"

##### Bar Appearance #####
# Configuring the general appearance of the bar.
# These are only some of the options available. For all options see:
# https://felixkratz.github.io/SketchyBar/config/bar
# If you are looking for other colors, see the color picker:
# https://felixkratz.github.io/SketchyBar/config/tricks#color-picker

bar=(
    position=top
    height=30
    color="$BAR_COLOR"
    shadow=off
    sticky=on
    padding_right=2
    padding_left=2
    margin=10
    corner_radius=5
    topmost=window
    blur_radius=0
    y_offset=7
)

sketchybar --bar "${bar[@]}"

##### Changing Defaults #####
# We now change some default values, which are applied to all further items.
# For a full list of all available item properties see:
# https://felixkratz.github.io/SketchyBar/config/items

default=(
    padding_left=7
    padding_right=7
    icon.font="$FONT:Bold:17.0"
    label.font="$FONT:Bold:15.0"
    icon.color="$WHITE"
    label.color="$WHITE"
    icon.padding_left=4
    icon.padding_right=4
    label.padding_left=4
    label.padding_right=4
    background.height=24
    background.corner_radius=20
    background.border_width=2
)
sketchybar --default "${default[@]}"

##### Adding Mission Control Space Indicators #####
# Let's add some mission control spaces:
# https://felixkratz.github.io/SketchyBar/config/components#space----associate-mission-control-spaces-with-an-item
# to indicate active and available mission control spaces.

sketchybar --add event aerospace_workspace_change

for m in $("$AEROSPACE_PATH" list-monitors); do
    for sid in $("$AEROSPACE_PATH" list-workspaces --monitor "$m"); do
        space_opt=(
            padding_left=1
            padding_right=1
            label.padding_left=1
            label.padding_right=1
            background.color=0x44ffffff
            background.corner_radius=5
            background.height=25
            label="$sid"
            click_script="$AEROSPACE_PATH workspace $sid"
            script="$PLUGIN_DIR/aerospace.sh $sid"
        )
        sketchybar --add item "space.$sid" left \
            --subscribe "space.$sid" aerospace_workspace_change \
            --set "space.$sid" "${space_opt[@]}"
    done
done

##### Adding Left Items #####
# We add some regular items to the left side of the bar, where
# only the properties deviating from the current defaults need to be set

sketchybar --add item front_app left \
    --set front_app icon.drawing=off script="$PLUGIN_DIR/front_app.sh" \
    --subscribe front_app front_app_switched

##### Adding Right Items #####
# In the same way as the left items we can add items to the right side.
# Additional position (e.g. center) are available, see:
# https://felixkratz.github.io/SketchyBar/config/items#adding-items-to-sketchybar

# Some items refresh on a fixed cycle, e.g. the clock runs its script once
# every 10s. Other items respond to events they subscribe to, e.g. the
# volume.sh script is only executed once an actual change in system audio
# volume is registered. More info about the event system can be found here:
# https://felixkratz.github.io/SketchyBar/config/events

# Right
source "$ITEM_DIR/calendar.sh"
source "$ITEM_DIR/volume.sh"
source "$ITEM_DIR/battery.sh"
source "$ITEM_DIR/cpu.sh"
# an experimental one --- not yet working
# source "$ITEM_DIR/music.sh"

##### Force all scripts to run the first time (never do this in a script) #####
sketchybar --update
